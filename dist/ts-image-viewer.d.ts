// Generated by dts-bundle-generator v5.9.0

export declare type Quadruple = readonly [
	x1: number,
	y1: number,
	x2: number,
	y2: number
];
export interface ImageLoadInfo {
	type: "URL" | "Base64" | "Blob" | "ByteArray";
	data: string | Blob | Uint8Array;
	uuid?: string;
}
export interface AnnotationDto {
	annotationType: string;
	uuid: string;
	imageUuid: string;
	dateCreated: string;
	dateModified: string;
	author: string;
	textContent?: string;
	rotation?: number;
}
export interface AnnotEventDetail {
	type: "focus" | "select" | "add" | "edit" | "delete" | "render";
	annotations: AnnotationDto[];
}
export declare class AnnotEvent extends CustomEvent<AnnotEventDetail> {
	constructor(detail: AnnotEventDetail);
}
export interface StampCreationInfo {
	subject: string;
	bbox: Quadruple;
}
export interface CustomStampCreationInfo extends StampCreationInfo {
	imageData: number[];
	type: string;
	name: string;
}
export interface CustomStampEventDetail {
	type: "add" | "delete";
	stamp: CustomStampCreationInfo;
}
export declare type FileButtons = "open" | "save" | "close";
export interface TsImageViewerOptions {
	containerSelector: string;
	userName?: string;
	fileButtons?: FileButtons[];
	fileOpenAction?: () => void;
	fileSaveAction?: () => void;
	fileCloseAction?: () => void;
	annotChangeCallback?: (detail: AnnotEventDetail) => void;
	customStamps?: CustomStampCreationInfo[];
	customStampChangeCallback?: (detail: CustomStampEventDetail) => void;
	lazyLoadImages?: boolean;
	previewWidth?: number;
}
export declare class TsImageViewer {
	private readonly _userName;
	private _outerContainer;
	private _shadowRoot;
	private _mainContainer;
	private readonly _eventService;
	private readonly _imageService;
	private readonly _annotatorService;
	private readonly _customStampsService;
	private readonly _loader;
	private readonly _viewer;
	private readonly _previewer;
	private _fileOpenAction;
	private _fileSaveAction;
	private _fileCloseAction;
	private _annotChangeCallback;
	private _customStampChangeCallback;
	private _mainContainerRObserver;
	private _panelsHidden;
	private _fileInput;
	private _imageLoadingTask;
	private _timers;
	constructor(options: TsImageViewerOptions);
	destroy(): void;
	openImagesAsync(loadInfos: ImageLoadInfo[]): Promise<void>;
	closeImages(): void;
	importAnnotations(dtos: AnnotationDto[]): void;
	importAnnotationsFromJson(json: string): void;
	exportAnnotations(imageUuid?: string): AnnotationDto[];
	exportAnnotationsToJson(imageUuid?: string): string;
	importCustomStamps(customStamps: CustomStampCreationInfo[]): void;
	importCustomStampsFromJson(json: string): void;
	exportCustomStamps(): CustomStampCreationInfo[];
	exportCustomStampsToJson(): string;
	private initMainContainerEventHandlers;
	private initViewControls;
	private initFileButtons;
	private onFileInput;
	private onOpenFileButtonClick;
	private onSaveFileButtonClick;
	private onCloseFileButtonClick;
	private initModeSwitchButtons;
	private initAnnotationButtons;
	private setViewerMode;
	private onHandModeButtonClick;
	private onAnnotatorModeButtonClick;
	private onZoomOutClick;
	private onZoomInClick;
	private onZoomFitViewerClick;
	private onZoomFitImageClick;
	private onRotateCounterClockwiseClick;
	private onRotateClockwiseClick;
	private onPaginatorPrevClick;
	private onPaginatorNextClick;
	private annotatorUndo;
	private annotatorClear;
	private annotatorSave;
	private onCustomStampChanged;
	private onAnnotatorChange;
	private onAnnotatorDataChanged;
	private setAnnotatorMode;
	private onAnnotatorEditTextButtonClick;
	private onAnnotatorDeleteButtonClick;
	private onAnnotatorSelectModeButtonClick;
	private onAnnotatorStampModeButtonClick;
	private onAnnotatorPenModeButtonClick;
	private onAnnotatorGeometricModeButtonClick;
	private onAnnotatorTextModeButtonClick;
	private imageServiceUndo;
	private onImageChange;
	private onImageServiceStateChange;
	private showPreviewer;
	private refreshImages;
	private onPreviewerToggleClick;
	private onMainContainerPointerMove;
}

export {};
